#include <bits/stdc++.h>
using namespace std;
int n,m;
vector<int>g[100100];
int par[100100];
int vis[100100]; 
map<int,int>mp;
void dfs(int node,int parent,int comp){
    par[node]=parent;
    vis[node]=1;
    mp[comp]++;
    for(auto v:g[node]){ 
         
         if(!vis[v]){ 
                dfs(v,node,comp);
            }   
    }
}
int main() {
	cin>>n>>m;
	for(int i=0;i<m;i++){
	    int a,b;
	    cin>>a>>b;
	    g[a].push_back(b);
	    g[b].push_back(a);
	}
	int k=0;
	for(int i=1;i<=n;i++){
	    if(!vis[i]){
	        k++;
	        dfs(i,0 ,k);
	    } 
	}
	 
	long long int res=0;
	long long int sum=0;
	for(int i=1;i<=k;i++){ 
	    res+=mp[i]*sum;
	    sum+=mp[i];
	} 
	//res+=sum;
	cout<<res<<endl;
	return 0;
}
