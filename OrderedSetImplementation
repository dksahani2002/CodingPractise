#include <bits/stdc++.h>
using namespace std;
#include<ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
typedef tree <int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update>ordered_set;
int main() {
	int t;
	cin>>t;
	while(t--){
	    int q;
	    cin>>q;
	    ordered_set<int>st;
	    while(q--){
	        string s;
	        cin>>s;
	        if(s=="add"){
	            int x;
	            cin>>x;
	            st.insert(x);
	        }
	        else if(s=="remove"){
	            int x;
	            cin>>x;
	            if(st.find(x)!=st.end()){
	                st.erase(st.find(x));
	            }
	        }
	        else if(s=="find"){
	             int x;
	            cin>>x;
	            if(x>=(int)st.size()){
	                cout<<"-1\n";
	            }
	            else
                    cout<<*(st.find_by_order(x))<<"\n";
	        }
	        else{
	            //findpos
	            int x;
	            cin>>x;
                cout<<st.order_of_key(x)<<"\n";
	            
	        }
	    }
	}
	return 0;
}
