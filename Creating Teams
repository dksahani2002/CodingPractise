#include <bits/stdc++.h>
using namespace std;
int n,m;
vector<int>g[100100];
int par[100100];
int vis[100100];
int col[100100];
int notpossible=0;
void dfs(int node,int parent,int color){
    par[node]=parent;
    vis[node]=1;
    col[node]=color;
    for(auto v:g[node]){
         if(!vis[v]){
                dfs(v,node,3-color);
            }
         else if(col[v]==col[node]){
                notpossible=1;             
         }
    }
}
int main() {
	cin>>n>>m;
	for(int i=0;i<m;i++){
	    int a,b;
	    cin>>a>>b;
	    g[a].push_back(b);
	    g[b].push_back(a);
	}
	  
	for(int i=1;i<=n;i++){  
	    if(!vis[i]){
	        dfs(i,0,1);
	    } 
	} 
	if(!notpossible){
	    cout<<"YES\n";
	}
	else{
	    cout<<"NO\n";
	}
	return 0;
}
