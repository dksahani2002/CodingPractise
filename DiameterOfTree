#include <bits/stdc++.h>
using namespace std;
int n,m;
vector<int>g[100100];
int dep[100100];
int isleaf[100100];
 
int par[100100];
 
void dfs(int node , int parent , int depth){
    dep[node]=depth;
    par[node]=parent;
     
    for(auto v:g[node]){
        if(v!=parent){
             
            dfs(v,node,depth+1);
             
        }
    }
    
}
int main() {
	cin>>n>>m;
	for(int i=0;i<n;i++){
	    int a,b;
	    cin>>a>>b;
	    g[a].push_back(b);
	    g[b].push_back(a);
	}
	dfs(1,0,0); 
	int maxn=1;
	for(int i=2;i<=n;i++){
	    if(dep[i]>dep[maxn]){
	        maxn=i;
	    }
	}
	cout<<maxn<<endl;
	dfs(maxn,0,0);
	maxn=1;
	for(int i=2;i<=n;i++){
	    if(dep[i]>dep[maxn]){
	        maxn=i;
	    }
	}
	cout<<maxn<<endl;
	return 0;
}
