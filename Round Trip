#include <bits/stdc++.h>
using namespace std;
int n,m;
vector<int>g[100100];
//int par[100100];
int vis[100100];
int back_edge=0;
void dfs(int node,int parent){
    //par[node]=parent;
    vis[node]=1;
    for(auto v:g[node]){
        if(v!=parent){
            if(vis[v]==1){
                back_edge=1;
            }
            else if(!vis[v]){
                dfs(v,node);
            }
        }
    }
}
int main() {
	cin>>n>>m;
	for(int i=0;i<m;i++){
	    int a,b;
	    cin>>a>>b;
	    g[a].push_back(b);
	    g[b].push_back(a);
	}
	for(int i=1;i<=n;i++){
	    if(!vis[i]){
	        dfs(i,0);
	    }
	}
	if(back_edge){
	    cout<<"YES\n";
	}
	else{
	    cout<<"NO\n";
	}
	return 0;
}
